<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kami.blog.dao.BlackipDao">
    <!-- Blackip的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Blackip_Map" type="com.kami.blog.model.Blackip">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="ip" jdbcType="VARCHAR" property="ip" />
    </resultMap>

    <!-- 数据库中表名为:blackip的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="blackip_Column">
        blackip.id as id
        ,blackip.ip as ip
    </sql>

    <!--获得类名为:Blackip对应的数据库表的数据总行数 -->
    <select id="getBlackipRowCount" resultType="java.lang.Long">
        select count(id) from blackip
    </select>
    <!-- 获得类名为:Blackip对应数据库中表的数据集合 -->
    <select id="selectBlackip" resultMap="result_Blackip_Map">
        select 
        <include refid="blackip_Column" /> 
        from blackip
    </select> 

    <!-- 获得一个Blackip对象,以参数Blackip对象中不为空的属性作为条件进行查询-->
    <select id="selectBlackipByObj" parameterType="com.kami.blog.model.Blackip" resultMap="result_Blackip_Map">
        select 
            <include refid="blackip_Column" /> 
        from blackip
        <where>
            <if test="ip != null "> and blackip.ip = #{ip,jdbcType=VARCHAR}</if>
            <if test="id != null "> and blackip.id = #{id,jdbcType=INTEGER}</if>
        </where>
    </select> 

    <!-- 通过Blackip的id获得对应数据库中表的数据对象-->
    <select id="selectBlackipById" parameterType="java.lang.Integer" resultMap="result_Blackip_Map">
        select 
            <include refid="blackip_Column" /> 
        from blackip
        where blackip.id = #{id,jdbcType=INTEGER}
    </select> 

    <!-- 将Blackip插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertBlackip" parameterType="com.kami.blog.model.Blackip">
        insert into blackip(id,ip) 
        values(#{id,jdbcType=INTEGER},#{ip,jdbcType=VARCHAR})
    </insert>

    <!-- 将Blackip中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyBlackip" parameterType="com.kami.blog.model.Blackip">
        insert into blackip
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="ip != null">ip,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id,jdbcType=INTEGER},</if>
            <if test="ip != null"> #{ip,jdbcType=VARCHAR},</if>
        </trim>
    </insert>

    <!-- 将Blackip批量插入到对应数据库的表中-->
    <insert id="insertBlackipByBatch" parameterType="ArrayList">
        insert into blackip(id,ip) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id,jdbcType=INTEGER},#{item.ip,jdbcType=VARCHAR})
        </foreach>
    </insert>

    <!-- 通过Blackip的id将数据库表中对应的数据删除-->
    <delete id="deleteBlackipById" parameterType="java.lang.Integer">
        delete from blackip
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <!-- 通过Blackip的id将Blackip的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateBlackipById" parameterType="com.kami.blog.model.Blackip">
        update blackip set
            ip=#{ip,jdbcType=VARCHAR}
        where id=#{id,jdbcType=INTEGER}
    </update>

    <!-- 通过Blackip的id将Blackip中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyBlackipById" parameterType="com.kami.blog.model.Blackip">
        update blackip
        <set>
            <if test="ip != null">
                ip=#{ip,jdbcType=VARCHAR},
            </if>
        </set>
        where id=#{id,jdbcType=INTEGER}
    </update>

</mapper>